{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled220.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNs53r3Cae1jKZP8wheMxpS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/priyasi345/autodidact/blob/master/sound\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9YxCydZYohYx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn import tree\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.model_selection import train_test_split\n",
        "from matplotlib import pyplot as plt\n",
        "import seaborn as sns "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yQS0I5pCpQNu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data=pd.read_csv('data.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qcrqdcWcrCl6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 233
        },
        "outputId": "d1aaafd4-3c08-4dba-c79d-e36bec1bcd11"
      },
      "source": [
        "data.describe().tail()"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>acousticness</th>\n",
              "      <th>danceability</th>\n",
              "      <th>duration_ms</th>\n",
              "      <th>energy</th>\n",
              "      <th>instrumentalness</th>\n",
              "      <th>key</th>\n",
              "      <th>liveness</th>\n",
              "      <th>loudness</th>\n",
              "      <th>mode</th>\n",
              "      <th>speechiness</th>\n",
              "      <th>tempo</th>\n",
              "      <th>time_signature</th>\n",
              "      <th>valence</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000003</td>\n",
              "      <td>0.122</td>\n",
              "      <td>16042.0</td>\n",
              "      <td>0.0148</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0188</td>\n",
              "      <td>-33.097</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0231</td>\n",
              "      <td>47.859</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0348</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>504.0</td>\n",
              "      <td>0.009630</td>\n",
              "      <td>0.514</td>\n",
              "      <td>200015.0</td>\n",
              "      <td>0.5630</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0923</td>\n",
              "      <td>-8.394</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0375</td>\n",
              "      <td>100.189</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2950</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1008.0</td>\n",
              "      <td>0.063300</td>\n",
              "      <td>0.631</td>\n",
              "      <td>229261.0</td>\n",
              "      <td>0.7150</td>\n",
              "      <td>0.000076</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.1270</td>\n",
              "      <td>-6.248</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0549</td>\n",
              "      <td>121.427</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4920</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1512.0</td>\n",
              "      <td>0.265000</td>\n",
              "      <td>0.738</td>\n",
              "      <td>270333.0</td>\n",
              "      <td>0.8460</td>\n",
              "      <td>0.054000</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.2470</td>\n",
              "      <td>-4.746</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.1080</td>\n",
              "      <td>137.849</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.6910</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2016.0</td>\n",
              "      <td>0.995000</td>\n",
              "      <td>0.984</td>\n",
              "      <td>1004627.0</td>\n",
              "      <td>0.9980</td>\n",
              "      <td>0.976000</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.9690</td>\n",
              "      <td>-0.307</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8160</td>\n",
              "      <td>219.331</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.9920</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Unnamed: 0  acousticness  danceability  ...  time_signature  valence  target\n",
              "min         0.0      0.000003         0.122  ...             1.0   0.0348     0.0\n",
              "25%       504.0      0.009630         0.514  ...             4.0   0.2950     0.0\n",
              "50%      1008.0      0.063300         0.631  ...             4.0   0.4920     1.0\n",
              "75%      1512.0      0.265000         0.738  ...             4.0   0.6910     1.0\n",
              "max      2016.0      0.995000         0.984  ...             5.0   0.9920     1.0\n",
              "\n",
              "[5 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ySuHlGFUrMGw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 418
        },
        "outputId": "23d0b6dc-67b1-4485-a3d6-e5e78d45da6f"
      },
      "source": [
        "data.info()"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2017 entries, 0 to 2016\n",
            "Data columns (total 17 columns):\n",
            " #   Column            Non-Null Count  Dtype  \n",
            "---  ------            --------------  -----  \n",
            " 0   Unnamed: 0        2017 non-null   int64  \n",
            " 1   acousticness      2017 non-null   float64\n",
            " 2   danceability      2017 non-null   float64\n",
            " 3   duration_ms       2017 non-null   int64  \n",
            " 4   energy            2017 non-null   float64\n",
            " 5   instrumentalness  2017 non-null   float64\n",
            " 6   key               2017 non-null   int64  \n",
            " 7   liveness          2017 non-null   float64\n",
            " 8   loudness          2017 non-null   float64\n",
            " 9   mode              2017 non-null   int64  \n",
            " 10  speechiness       2017 non-null   float64\n",
            " 11  tempo             2017 non-null   float64\n",
            " 12  time_signature    2017 non-null   float64\n",
            " 13  valence           2017 non-null   float64\n",
            " 14  target            2017 non-null   int64  \n",
            " 15  song_title        2017 non-null   object \n",
            " 16  artist            2017 non-null   object \n",
            "dtypes: float64(10), int64(5), object(2)\n",
            "memory usage: 268.0+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CNCr5K3erQQD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train,test=train_test_split(data,test_size=0.34)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vm3F4MdZrdg4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "3abf5578-5fd1-459c-f9f3-6d9bac771fd9"
      },
      "source": [
        "print(\"training size:{},test size:{} \".format(len(train),len(test)))"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "training size:1331,test size:686 \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Hj_2cJmDtaWa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pos_tempo=data[data['target']==1]['tempo']\n",
        "neg_tempo=data[data['target']==0]['tempo']\n",
        "pos_loudness=data[data['target']==1]['loudness']\n",
        "neg_loudness=data[data['target']==0]['loudness']\n",
        "pos_valence=data[data['target']==1]['valence']\n",
        "neg_valence=data[data['target']==0]['valence']\n",
        "pos_duration=data[data['target']==1]['duration_ms']\n",
        "neg_duration=data[data['target']==0]['duration_ms']\n",
        "pos_speechiness=data[data['target']==1]['speechiness']\n",
        "neg_speechiness=data[data['target']==0]['speechiness']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lY-sI6QxyaU_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "outputId": "8fda9a34-9f92-46b7-d730-5b071e0bf194"
      },
      "source": [
        "pos_tempo"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       150.062\n",
              "1       160.083\n",
              "2        75.044\n",
              "3        86.468\n",
              "4       174.004\n",
              "         ...   \n",
              "1015    139.997\n",
              "1016     86.733\n",
              "1017    140.008\n",
              "1018    147.072\n",
              "1019    107.039\n",
              "Name: tempo, Length: 1020, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QIlocBTRuntH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "a8cd0b1c-8b5c-48cc-d5be-6801fdfd9144"
      },
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "# Create violinplot\n",
        "ax.violinplot(data[\"tempo\"], vert=False)\n",
        "\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "odJ5mmcfrt5j",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 516
        },
        "outputId": "837fd6a5-7aac-4db2-fa31-8cb48ef67b26"
      },
      "source": [
        "\n",
        "fig=plt.figure(figsize=[12,8])\n",
        "plt.title('song likes/disliked')\n",
        "pos_tempo.hist(alpha=0.5,bins=20,label='positive')\n",
        "neg_tempo.hist(alpha=0.6,bins=30,label='negative')\n",
        "plt.legend(loc=\"upper right\")"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f9d15f12828>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4FjloJDgwkEZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 726
        },
        "outputId": "fc81a57f-710c-407d-b69b-bd5998e5a549"
      },
      "source": [
        "fig2=plt.figure(figsize=(15,15))\n",
        "#valence\n",
        "ax3=fig2.add_subplot(331)\n",
        "ax3.set_xlabel(\"valence\")\n",
        "ax3.set_ylabel(\"loudness\")\n",
        "ax3.set_title('songs liked/disliked')\n",
        "pos_tempo.hist(alpha=0.5,bins=30)\n",
        "ax4=fig2.add_subplot(331)\n",
        "neg_valence.hist(alpha=0.5,bins=30)\n",
        "\n",
        "#duration\n",
        "ax3=fig2.add_subplot(335)\n",
        "ax3.set_xlabel(\"duration\")\n",
        "ax3.set_ylabel(\"loudness\")\n",
        "ax3.set_title('songs liked/disliked')\n",
        "pos_duration.hist(alpha=0.5,bins=30)\n",
        "ax4=fig2.add_subplot(331)\n",
        "neg_duration.hist(alpha=0.5,bins=30)\n",
        "\n",
        "#loudness\n",
        "ax3=fig2.add_subplot(332)\n",
        "ax3.set_xlabel(\"valence\")\n",
        "ax3.set_ylabel(\"loudness\")\n",
        "ax3.set_title('songs liked/disliked')\n",
        "pos_loudness.hist(alpha=0.5,bins=30)\n",
        "ax4=fig2.add_subplot(331)\n",
        "neg_loudness.hist(alpha=0.5,bins=30)\n",
        "\n",
        "#speechiness\n",
        "ax3=fig2.add_subplot(333)\n",
        "ax3.set_xlabel(\"speechiness\")\n",
        "ax3.set_ylabel(\"loudness\")\n",
        "ax3.set_title('songs liked/disliked')\n",
        "pos_tempo.hist(alpha=0.5,bins=30)\n",
        "ax4=fig2.add_subplot(331)\n",
        "neg_tempo.hist(alpha=0.5,bins=30)"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:8: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n",
            "  \n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:17: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:26: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:35: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9d15dff160>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x1080 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4HvmmbrBxoBK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}